<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">
    <!-- 导入redis.properties -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:redisConfig.properties"/>
    <!--设置jedisPool链接池的配置-->
    <bean class="redis.clients.jedis.JedisPoolConfig" id="jedisPoolConfig">
        <property value="${maxTotal}" name="maxTotal"/>
        <property value="${maxldle}" name="maxIdle"/>
        <property value="${maxWaitMillis}" name="maxWaitMillis"/>
        <property value="${testOnBorrow}" name="testOnBorrow"/>
        <property value="${testOnReturn}" name="testOnReturn"/>
    </bean>
    <!--redis链接密码-->
    <bean class="org.springframework.data.redis.connection.RedisPassword" id="redisPassword">
        <constructor-arg value="${auth}" name="thePassword"/>
    </bean>
    <!--spring-data-redis2.0以上的配置-->
    <bean class="org.springframework.data.redis.connection.RedisStandaloneConfiguration" id="redisStandaloneConfiguration">
        <property value="${host}" name="hostName"/>
        <property value="${port}" name="port"/>
        <property name="password" ref="redisPassword"/>
        <property value="${dbIndex}" name="database"/>
    </bean>
    <!--配置jedis链接工厂 spring-data-redis2.0中 建议改为构造器传入一个RedisStandaloneConfiguration 单机 RedisSentinelConfiguration 主从复制 RedisClusterConfiguration 集群-->
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" id="jedisConnectionFactory">
        <!--spring-data-redis2.0以上建议获取的方式-->
        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
    </bean>
    <!--手动设置 key 与 value的序列化方式-->
    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" id="keySerializer"/>
    <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" id="valueSerializer"/>
    <!--配置jedis模板 -->
    <bean class="org.springframework.data.redis.core.RedisTemplate" id="redisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="keySerializer"/>
        <property name="valueSerializer" ref="valueSerializer"/>
        <property name="hashKeySerializer" ref="keySerializer"/>
        <property name="hashValueSerializer" ref="valueSerializer"/>
    </bean>
    <!--也可以StringRedisTemplate 专注于String的操作 -->
    <bean class="org.springframework.data.redis.core.StringRedisTemplate" id="stringRedisTemplate">
        <!--<property name="connectionFactory" ref="jedisConnectionFactory"></property>-->
        <!--在StringRedisTemplate与redisTemplate不同,可以直接造构造器中传入ConnectionFactory-->
        <constructor-arg name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="keySerializer"/>
        <property name="valueSerializer" ref="valueSerializer"/>
        <property name="hashKeySerializer" ref="keySerializer"/>
        <property name="hashValueSerializer" ref="valueSerializer"/>
    </bean>
</beans>